<templateSet group="Emisia">
  <template name="e_class" value="    extend: '$className$',&#10;    alias: 'widget.$alias$',&#10;    requires: [],&#10;    &#10;    /**&#10;     * @property {} p_$propName$&#10;     */&#10;    p_$propName$: undefined,&#10;    &#10;    initComponent: function(){&#10;        Ext.apply(this, {&#10;            title: '$title$',&#10;            items:[{&#10;                refName:'p_$propName$'&#10;            }]&#10;        });&#10;        &#10;        this.callParent(arguments);&#10;        this.m_loadInitialData();&#10;        this.m_registerLocalEventListeners();&#10;    },&#10;    &#10;    m_loadInitialData: function(){&#10;      $initContent$&#10;    },&#10;    m_registerLocalEventListeners: function(){&#10;        $regLocalContent$&#10;    }$END$" description="insert class structure" toReformat="true" toShortenFQNames="true">
    <variable name="className" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="alias" expression="" defaultValue="&quot;Enter Alias Name&quot;" alwaysStopAt="true" />
    <variable name="propName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="title" expression="" defaultValue="&quot;Enter title&quot;" alwaysStopAt="true" />
    <variable name="initContent" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="regLocalContent" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_method" value="m_$methodName$: function($param$){&#10;    $methodContent$&#10;} $END$" description="insert emty method" toReformat="true" toShortenFQNames="true">
    <variable name="methodName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="param" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="methodContent" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_while" value="var current;&#10;var $item$ = 0;&#10;while ($item$ &lt; $array$.length) {&#10;    current = $array$[$item$];&#10;    &#10;    $item$++;&#10;}$END$" description="insert while loop template" toReformat="true" toShortenFQNames="true">
    <variable name="item" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="array" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_layout" value="layout:{&#10;  type:'$type$',&#10;  align:'$stretch$'&#10; },$END$" description="insert layout config" toReformat="true" toShortenFQNames="true">
    <variable name="type" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="stretch" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_switch" value="switch ($expression$) {&#10;    case 0:&#10;    $blockCode$&#10;    break;&#10;    default:&#10;    $defaultBlockCode$&#10;    break;&#10;}$END$" description="insert switch template" toReformat="true" toShortenFQNames="true">
    <variable name="expression" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="blockCode" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="defaultBlockCode" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_d" value="debugger;$END$" description="debugger statement" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_desc" value="describe(' - Testing $methodName$', function(){&#10;    it(' - $itDescription$', function(){&#10;        spyOn(me.testObj,$whatIsTested$).and.$jasmineMethod$();&#10;        me.testObj.$testedMethod$();&#10;        expect(me.testObj.$whatIsTested$).$jasmineMatcher$();&#10;    });&#10;});$END$" description="insert describe block with it block inside" toReformat="true" toShortenFQNames="true">
    <variable name="methodName" expression="" defaultValue="&quot;what is tested&quot;" alwaysStopAt="true" />
    <variable name="itDescription" expression="" defaultValue="&quot;what should it do&quot;" alwaysStopAt="true" />
    <variable name="jasmineMethod" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="testedMethod" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="whatIsTested" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="jasmineMatcher" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_items" value="items:[$begin$]$END$" description="insert items config" toReformat="true" toShortenFQNames="true">
    <variable name="begin" expression="" defaultValue="&quot;insert xtype&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_container" value="{&#10;xtype:'container',&#10;refName:'p_$ref$'&#10;}$END$" description="insert container object" toReformat="true" toShortenFQNames="true">
    <variable name="ref" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_panel" value="{xtype: 'container',&#10;refName: 'p_$refname$'&#10;}$END$" description="insert panel config" toReformat="true" toShortenFQNames="true">
    <variable name="refname" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_button" value="{&#10;xtype: 'button',&#10;cls: '$cls$',&#10;handler: this.m_$handler$,&#10;scope: this,&#10;text: '$text$'&#10;}$END$" description="insert button element" toReformat="true" toShortenFQNames="true">
    <variable name="cls" expression="" defaultValue="&quot;name of class&quot;" alwaysStopAt="true" />
    <variable name="handler" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="text" expression="" defaultValue="&quot;button text here&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_getter" value="m_get$name$: function($value$){&#10;   var $cls$;&#10;   return $cls$;&#10; }$END$" description="insert getter method" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="cls" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="e_kitchen" value="    extend: 'GS4TR.kitchensink.$appName$.Button',&#10;    xtype: 'gs4trKitchensink$restOfName$',&#10;    requires: [&#10;        'Ext.container.Container',&#10;        '$testedClass$'&#10;    ],&#10;    p_component: {&#10;        xtype: 'container',&#10;        cls: 'GS4TR',&#10;        defaults: { &#10;            store: {&#10;                data: [{$dataContent$}]&#10;            }&#10;        },&#10;        items: [$itemsContent$],&#10;        padding: 20&#10;    },&#10;    text: '$textOfClass$' $END$&#10;" description="insert kitchensink class structure" toReformat="true" toShortenFQNames="true">
    <variable name="appName" expression="" defaultValue="&quot;app name here&quot;" alwaysStopAt="true" />
    <variable name="restOfName" expression="" defaultValue="&quot;rest of xtype name&quot;" alwaysStopAt="true" />
    <variable name="testedClass" expression="" defaultValue="&quot;find name of the tested class&quot;" alwaysStopAt="true" />
    <variable name="dataContent" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="itemsContent" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="textOfClass" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>